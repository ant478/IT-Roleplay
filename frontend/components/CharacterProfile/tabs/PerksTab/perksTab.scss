.perks-tab {
  height: 100%;
}

.perks-tab__controls-and-description-wrapper {
  height: calc(100% - #{$info-section-height});
}

.perks-tab__perks-rows-wrapper {
  display: inline-block;
  border-right: 0.2em solid $borders;
  width: 50%;
  height: 100%;
}

.perks-tab__perks-rows {
  padding: 1em;
}

.perks-tab__perk-row {
  position: relative;

  &:not(:last-child) {
    margin-bottom: 1em;
  }

  $usage-type-colors-map: (
    passive: #066ab5,
    active: #aa2e25,
  );

  $usage-type-highlighted-colors-map: (
    passive: #6fc2ff,
    active: #ff8394,
  );

  @each $usage-type, $usage-type-color in $usage-type-colors-map {
    &_#{$usage-type} {
      .perk-tab__perk {
        color: $usage-type-color;
        border-color: $usage-type-color;

        &:hover {
          color: map_get($usage-type-highlighted-colors-map, $usage-type);
          background: #{$usage-type-color}94;
        }

        &_can-be-removed {
          color: map_get($usage-type-highlighted-colors-map, $usage-type);
          background: #{$usage-type-color}94;

          &:hover {
            background-color: $usage-type-color;
          }
        }

        &_not-available {
          color: #{$usage-type-color}61;
          border-color: #{$usage-type-color}61;

          &:hover {
            border-color: $usage-type-color;
            color: map_get($usage-type-highlighted-colors-map, $usage-type);
            background: #{$usage-type-color}94;
          }
        }
      }

      .perk-tab__perk-arrow {
        color: $usage-type-color;
      }
    }
  }
}

$perk-size: 3.5em;
$icon-size: 2.1em;
$complexity-levels: (0, 1, 2);
$complexity-levels-count: length($complexity-levels);

.perk-tab__perk-wrapper {
  width: calc((100% - 1px/* IE 11 one love */) / #{$complexity-levels-count});
  display: inline-block;
  height: $perk-size;
}

.perk-tab__perk {
  display: inline-block;
  position: relative;
  cursor: pointer;
  border-width: 0.2em;
  border-style: solid;
  border-radius: 0.5rem;
  height: $perk-size;
  width: $perk-size;
  transition: background-color 0.15s;
  transition-timing-function: ease-out;

  &:hover {
    border-style: solid;
    transition: background-color 0s;
  }

  &:after {
    content: attr(data-level);
    position: absolute;
    font-size: 0.7em;
    font-weight: 800;
    right: 0.2em;
    top: 0.2em;
  }

  @each $complexity-level in $complexity-levels {
    &_complexity-#{$complexity-level} {
      left: calc(100% / #{$complexity-levels-count - 1} * #{$complexity-level} - #{$perk-size} / #{$complexity-levels-count - 1} * #{$complexity-level});
    }
  }

  &_can-be-added {
    border-style: dashed;
  }

  &_not-available {
    border-style: dotted;
  }
}

.perk-tab__icon {
  @include absoluteCenterPositioning;
  font-size: $icon-size;
  max-width: $icon-size;
}

.perk-tab__perk-arrow {
  display: inline-block;
  position: absolute;
  width: $perk-size;
  height: $perk-size;

  &:before {
    @include absoluteCenterPositioning;
    content: 'â‡¨';
    display: block;
    text-align: center;
    font-size: 2.25em;
    height: 1em;
  }

  &_not-available {
    opacity: 0.4;
  }

  @each $complexity-level in $complexity-levels {
    &_complexity-#{$complexity-level} {
      left: calc(#{$complexity-level + 1} * #{$perk-size} + ((#{$complexity-level} + 0.5) * (100% - #{$perk-size} * #{$complexity-levels-count}) / #{$complexity-levels-count - 1}) - 0.5 * #{$perk-size});
    }
  }
}
